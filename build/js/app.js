var app=angular.module("spotBeta",["ngAnimate","ngResource","ngRoute","firebase"]).constant("FIREBASE_URL","https://intense-inferno-4354.firebaseio.com").config(function(e,n){e.when("/",{templateUrl:"home.html",controller:"appController"}).when("/app",{templateUrl:"app.html",controller:"appController"}).otherwise({redirectTo:"/"})});app.controller("appController",["$scope","$location","$timeout","FIREBASE_URL","Auth","ClimbData","User","Places",function(e,n,r,o,t,i,a,l){e.signedIn=t.signedIn,e.logout=t.logout,e.user=t.user,e.oldUser={},e.login=function(){t.login(e.oldUser).then(function(r){console.log("Profile recieved:"),console.log(r),n.path("/app"),e.hideAuth()},function(n){e.error=n.toString()})},e.register=function(){t.register(e.user).then(function(r){console.log("User Created:"),console.log(r),t.login(e.user).then(function(){n.path("/app")})},function(n){e.error=n.toString()})},e.showUpload=!1,e.toggleUpload=function(){e.showUpload=!e.showUpload},e.signupShowing=!1,e.loginShowing=!1,e.showLogin=function(){e.signupShowing=!1,e.loginShowing=!e.loginShowing},e.showSignup=function(){e.signupShowing=!e.signupShowing,e.loginShowing=!1},e.hideAuth=function(){e.signupShowing=!1,e.loginShowing=!1},e.showProfile=!1,e.showLists=!1,e.toggleProfile=function(){e.showProfile=!e.showProfile,e.showLists=!1},e.toggleLists=function(){e.showLists=!e.showLists,e.showProfile=!1},e.currentSearch=l.currentSearch,e.predictions=!1,e.latSearch=!1,e.latInvalid=!0,e.searchType="placeSearch",e.setSearchType=function(n){"placeSearch"==n?e.latSearch=!1:"latSearch"==n?e.latSearch=!0:"currentSearch"==n&&e.useCurrentLocation()};var s=function(e){l.geocode(e).then(function(e){console.log("Place details recieved:"),console.log(e),l.currentSearch=e[0];var r=l.currentSearch.geometry.location.A,o=l.currentSearch.geometry.location.F;n.path("/app").search({latitude:r,longitude:o})},function(e){console.error(e),l.currentSearch=!1})};l.userLocation?e.canUseLocation=!0:l.setUserLocation().then(function(){e.canUseLocation=!0},function(){e.canUseLocation=!1}),e.useCurrentLocation=function(){s(l.userLocation)},e.inputKeyup=function(n){if(e.latSearch){var r=[],o=n.split(",");if(2!=o.length)return e.errorMessage="Please enter two numbers seperated by a comma for searching by latitude and longitude",void(e.latInvalid=!0);for(var t=0;t<o.length;t++){var i=o[t].trim(),a=parseFloat(i);if(isNaN(a))return e.errorMessage="Please enter only numbers for latitude and longitude search",void(e.latInvalid=!0);r.push(a)}e.errorMessage=!1,e.latInvalid=!1,e.latLgnQuery=r}else l.autocomplete(n).then(function(n){e.predictions=n},function(n){console.error(n),e.predictions=!1})},e.showMap=function(n){var r;if(e.latSearch){var o=e.latLgnQuery[0],t=e.latLgnQuery[1];r=new google.maps.LatLng(o,t)}else r=n.description;s(r)}}]),app.directive("jdListView",["User",function(e){return{restrict:"E",templateUrl:"directives/listView.html",link:function(n,r,o){n.userProfile=e.user()}}}]),app.directive("jdMapFilter",["ClimbData","Places","User","$compile","$routeParams",function(e,n,r,o,t){return{restrict:"E",templateUrl:"directives/mapFilter.html",controller:function(e){var r=this;if(n.currentSearch)var i=n.currentSearch.geometry.location.A,a=n.currentSearch.geometry.location.F;else if(t.latitude){var i=t.latitude,a=t.longitude,l=new google.maps.LatLng(i,a);n.geocode(l).then(function(e){n.currentSearch=e[0]},function(e){console.error(e),n.currentSearch=!1})}else var i=37.8717,a=-122.2728;var s=document.getElementById("googleMap"),c={center:new google.maps.LatLng(i,a),zoom:12,mapTypeId:google.maps.MapTypeId.TERRAIN};e.map=new google.maps.Map(s,c),void 0===e.markers&&(e.markers={}),e.mapBounds,google.maps.event.addListener(e.map,"bounds_changed",function(){e.mapBounds=e.map.getBounds()});var u=new google.maps.InfoWindow;google.maps.event.addListener(u,"closeclick",function(){u.isOpen=!1}),this.drawMarkers=function(n){angular.forEach(n,function(n,r){var t=n.name,i=n.location["long"],a=n.location.lat;if(e.mapBounds.qa.A>=i&&i>=e.mapBounds.qa.j&&e.mapBounds.za.A<=a&&a<=e.mapBounds.za.j){n.included=!1;var l='<div class="mapInfoBox"><h2>'+t+"</h2>";angular.forEach(n.climbs,function(e,r){if(void 0===e.included&&(e.included=!0),e.included){n.included=!0;var o;o=(e.type="boulder")?"V"+e.grade:"5."+e.grade.grade;var t='<div class="boxRoute"><span class="boxRating">'+o+'</span><a href="#" ng-click="viewResultsList()">'+e.name+"</a></div>";l+=t}}),l+="</div>";var s=o(l)(e);s=s[0]}else n.included=!1;if(n.included)if(e.markers[r]){if(e.markers[r].boxContent=s,u.isOpen){var c=u.getPosition(),d=e.markers[r].getPosition();c==d&&(u.close(),new google.maps.event.trigger(e.markers[r],"click"))}}else{var g=new google.maps.Marker({title:t,position:new google.maps.LatLng(a,i),map:e.map,animation:"drop",boxContent:s});google.maps.event.addListener(g,"click",function(){u.setContent(g.boxContent),u.open(e.map,g),u.isOpen=!0}),e.markers[r]=g}else if(e.markers[r]){var c=u.getPosition(),d=e.markers[r].getPosition();c==d&&(u.isOpen=!1),e.markers[r].setMap(null),e.markers[r]=null}})},this.buildFilterList=function(n){angular.forEach(n,function(n,r){var o={};n.included?(o.name=n.name,o.location=n.location,o.climbs=[],o.key=r,angular.forEach(n.climbs,function(e,n){e.included&&o.climbs.push(angular.copy(e))}),angular.forEach(o.climbs,function(e,n){if(angular.isNumber(e.grade)){var r="boulder"==e.type?"V"+e.grade.toString():"5."+e.grade.grade;e.grade=r}}),e.filteredList[o.key]=o):delete e.filteredList[r]})},e.filter={type:{showing:!0,roped:!0,subtypes:{sport:!0,trad:!0,topRope:!0},boulder:!0},grade:{showing:!0,boulder:{showing:!0,small:{0:!0,1:!0,2:!0,3:!0,4:!0,5:!0,6:!0,7:!0,8:!0,9:!0},large:{10:!0,11:!0,12:!0,13:!0,14:!0,15:!0,16:!0}},roped:{showing:!0,grades:{0:{grade:6,include:!0,conversion:6},1:{grade:7,include:!0,conversion:7},2:{grade:8,include:!0,conversion:8},3:{grade:9,include:!0,conversion:9},4:{grade:"10a",include:!0,conversion:10.1},5:{grade:"10b",include:!0,conversion:10.2},6:{grade:"10c",include:!0,conversion:10.3},7:{grade:"10d",include:!0,conversion:10.4},8:{grade:"11a",include:!0,conversion:11.1},9:{grade:"11b",include:!0,conversion:11.2},10:{grade:"11c",include:!0,conversion:11.3},11:{grade:"11d",include:!0,conversion:11.4},12:{grade:"12a",include:!0,conversion:12.1},13:{grade:"12b",include:!0,conversion:12.2},14:{grade:"12c",include:!0,conversion:12.3},15:{grade:"12d",include:!0,conversion:12.4},16:{grade:"13a",include:!0,conversion:13.1},17:{grade:"13b",include:!0,conversion:13.2},18:{grade:"13c",include:!0,conversion:13.3},19:{grade:"13d",include:!0,conversion:13.4},20:{grade:"14a",include:!0,conversion:14.1},21:{grade:"14b",include:!0,conversion:14.2},22:{grade:"14c",include:!0,conversion:14.3},23:{grade:"14d",include:!0,conversion:14.4},24:{grade:"15a",include:!0,conversion:15.1},25:{grade:"15b",include:!0,conversion:15.2},26:{grade:"15c",include:!0,conversion:15.3},27:{grade:"15d",include:!0,conversion:15.4}}}},rating:{showing:!0,stars:{1:!0,2:!0,3:!0,4:!0,5:!0}},height:{showing:!0,values:{0:{height:0,units:"feet",included:!0},1:{height:10,units:"feet",included:!0},2:{height:15,units:"feet",included:!0},3:{height:20,units:"feet",included:!0},4:{height:25,units:"feet",included:!0},5:{height:30,units:"feet",included:!0},6:{height:40,units:"feet",included:!0},7:{height:50,units:"feet",included:!0},8:{height:60,units:"feet",included:!0},9:{height:70,units:"feet",included:!0},10:{height:80,units:"feet",included:!0},11:{height:90,units:"feet",included:!0},12:{height:100,units:"feet",included:!0},13:{height:120,units:"feet",included:!0},14:{height:140,units:"feet",included:!0},15:{height:"140+",units:"feet",included:!0}}}},this.filterBoulderGrade=function(n,o){angular.forEach(e.filteredData,function(e,r){var t=e.climbs;angular.forEach(t,function(e,r){"boulder"==e.type&&(e.grade>=n&&e.grade<=o?e.included=!0:e.included=!1)})}),r.drawMarkers(e.filteredData),r.buildFilterList(e.filteredData)},this.filterRopedGrade=function(n,o){e.filter.grade.roped.grades;console.log("Filtering rope grades: "+n+" to "+o),angular.forEach(e.filteredData,function(e,r){var t=e.climbs;angular.forEach(t,function(e,r){"roped"==e.type&&(e.grade.conversion>=n&&e.grade.conversion<=o?e.included=!0:e.included=!1)})}),r.drawMarkers(e.filteredData),r.buildFilterList(e.filteredData)},this.filterHeight=function(n,o){var t=isNaN(o)?!0:!1;angular.forEach(e.filteredData,function(e,r){var i=e.climbs;angular.forEach(i,function(e,r){t?e.height>=n?e.included=!0:e.included=!1:e.height>=n&&e.height<=o?e.included=!0:e.included=!1})}),r.drawMarkers(e.filteredData),r.buildFilterList(e.filteredData)}},link:function(n,o,t,i){n.filteredData,n.filteredList={},google.maps.event.addListener(n.map,"idle",function(){e.$loaded().then(function(e){void 0===n.filteredData&&(n.filteredData=angular.copy(e)),console.log("Filtered climb data:"),console.log(n.filteredData),i.drawMarkers(n.filteredData),i.buildFilterList(n.filteredData)})["catch"](function(e){console.error(e)})}),n.filterType=function(e){var r="sport"==e||"trad"==e||"topRope"==e?!0:!1;angular.forEach(n.filteredData,function(o,t){var i=o.climbs;angular.forEach(i,function(o,t){r?o.subtype==e&&(o.included=n.filter.type.subtype[e]):o.type==e&&(o.included=n.filter.type[e])})}),i.drawMarkers(n.filteredData),i.buildFilterList(n.filteredData)},n.filterStarRating=function(e){angular.forEach(n.filteredData,function(r,o){var t=r.climbs;angular.forEach(t,function(r,o){r.rating==e&&(r.included=n.filter.rating.stars[e])})}),i.drawMarkers(n.filteredData),i.buildFilterList(n.filteredData)},n.filterHeight=function(e){console.log(e)},n.resetFilters=function(e){var r=function(n){angular.forEach(n,function(o,t){angular.isArray(o)||angular.isObject(o)?r(o):"showing"!=t&&(n[t]=e)})},o=function(e,n){angular.forEach(e,function(e,r){e.included=n,angular.forEach(e.climbs,function(e,r){e.included=n})})};r(n.filter),o(n.filteredData,e),i.drawMarkers(n.filteredData),i.buildFilterList(n.filteredData),console.log("Filter"),console.log(n.filter),console.log("Climbs"),console.log(n.filteredData)},n.showResultList=!1,n.toggleList=function(){n.showResultList=!n.showResultList},n.viewResultsList=function(){n.showResultList=!0},n.showMarker=function(e){new google.maps.event.trigger(n.markers[e],"click")},n.toggleFilter=function(e){n.filter[e].showing=!n.filter[e].showing},n.userProfile=r.user(),n.tempListName,n.currentClimb,n.addList=function(e){void 0==n.userProfile.lists&&(n.userProfile.lists={}),n.userProfile.lists[e]=[],console.log("Adding list to client object:"),console.log(n.userProfile),r.save(n.userProfile).then(function(e){console.log("list added and saved to user firebase object:"),console.log(n.userProfile)},function(e){console.error("Error creating list: "+e)})},n.addToList=function(e,o){o.push(e),console.log(e.name+" added to list"),console.log(n.userProfile),r.save(n.userProfile).then(function(e){console.log("Climb added and saved to list:"),console.log(n.userProfile),console.log(e)},function(e){console.error("Error adding climb to list: "+e)})},n.currentClimb,n.showClimbDetails=!1,n.showDetails=function(e){n.currentClimb=e,n.showClimbDetails=!0}}}}]),app.directive("jdMapSelect",[function(){return{restrict:"E",templateUrl:"directives/mapSelect.html",link:function(e,n,r){e.newClimb.newLocation.latitude=37.869531850846045,e.newClimb.newLocation.longitude=-122.26456025390627;var o=new google.maps.LatLng(e.newClimb.newLocation.latitude,e.newClimb.newLocation.longitude),t=document.getElementById("locationMapCanvas"),i={center:o,zoom:5,mapTypeId:google.maps.MapTypeId.ROADMAP};e.locationMap=new google.maps.Map(t,i),e.locationMarker=new google.maps.Marker({map:e.locationMap,position:o,title:"New Spot",draggable:!0}),e.resizeMap=function(){google.maps.event.trigger(e.locationMap,"resize"),e.locationMap.setZoom(e.locationMap.getZoom()),e.locationMap.setCenter(e.locationMarker.getPosition())},e.manualCoordUpdate=function(){var n=new google.maps.LatLng(e.newClimb.newLocation.latitude,e.newClimb.newLocation.longitude);e.locationMap.setCenter(n),e.locationMarker.setPosition(n)},google.maps.event.addListener(e.locationMarker,"drag",function(){var n=e.locationMarker.getPosition();e.$apply(e.newClimb.newLocation.latitude=n.lat()),e.$apply(e.newClimb.newLocation.longitude=n.lng())}),e.centerMarker=function(){var n=e.locationMap.getCenter();e.locationMarker.setPosition(n)},e.markerLocked=!1;var a,l;e.toggleMarkerLock=function(){if(e.markerLocked=!e.markerLocked,e.markerLocked){var n,r,o,t;a=google.maps.event.addListener(e.locationMap,"dragstart",function(){var i=e.locationMap.getCenter();n=i.lat(),r=i.lng();var a=e.locationMarker.getPosition();o=a.lat(),t=a.lng()}),l=google.maps.event.addListener(e.locationMap,"drag",function(){var i=e.locationMap.getCenter();mapNewLat=i.lat(),mapNewLng=i.lng();var a=n-mapNewLat,l=r-mapNewLng,s=o-a,c=t-l;e.$apply(e.newClimb.newLocation.latitude=s),e.$apply(e.newClimb.newLocation.longitude=c);var u=new google.maps.LatLng(s,c);e.locationMarker.setPosition(u)})}else google.maps.event.removeListener(a),google.maps.event.removeListener(l)}}}}]),app.directive("jdProfileView",["User",function(e){return{restrict:"E",templateUrl:"directives/profileView.html",link:function(n,r,o){n.userProfile=e.user(),console.log("User Profile (User.user):"),console.log(n.userProfile),n.updatePassForm=!1,n.updateEmailForm=!1,n.deleteUserForm=!1,n.showUpdatePass=function(){n.updatePassForm=!0,n.updateEmailForm=!1,n.deleteUserForm=!1},n.showUpdateEmail=function(){n.updatePassForm=!1,n.updateEmailForm=!0,n.deleteUserForm=!1},n.showDeleteUser=function(){n.updatePassForm=!1,n.updateEmailForm=!1,n.deleteUserForm=!0},n.tempEmailUpdate={newEmail:"",oldEmail:"",pass:""},n.tempPassUpdate={email:"",oldPass:"",newPass:""},n.deleteUserObj={email:"",pass:""},n.saveProfile=function(){e.save(n.userProfile).then(function(e){console.log("Profile saved"),console.log(e)},function(e){console.error("Error saving user profile: "+e)})},n.updatePassword=function(){Auth.updatePassword(n.tempPassUpdate).then(function(e){console.log("Password updated"),console.log(e)},function(e){console.error("Error updating password: "+e)})},n.updateEmail=function(){Auth.updateEmail(n.tempEmailUpdate).then(function(e){console.log("Email updated"),console.log(e)},function(e){console.error("Error updating email: "+e)})},n.deleteAccount=function(){Auth.deleteUser(n.deleteObj).then(function(e){console.log("User deleted"),console.log(e)},function(e){console.error("Error deleting user: "+e)})}}}}]),app.directive("jdSlider",["$document",function(e){return{restrict:"E",templateUrl:"directives/slider.html",require:"^jdMapFilter",scope:{filter:"="},link:function(n,r,o,t){var i,a,l=angular.element(".slider-container").width();if(n.currentMinPos=0,n.currentMaxPos=l,n.currentSlider=null,n.lastMaxIndex,n.lastMinIndex,"boulder"==o.type){var s=l/16;n.currentMin=0,n.currentMax=16,n.currentMinIndex=0,n.currentMaxIndex=16}else if("roped"==o.type){i=n.filter.grade.roped.grades;var c=Object.keys(i).length,s=l/(c-1);n.currentMin=i[0].grade,n.currentMax=i[c-1].grade,n.currentMinIndex=0,n.currentMaxIndex=c-1}else{if("height"!=o.type)return void console.error('Please enter a valid "type" attribute for the slider');a=n.filter.height.values;var c=Object.keys(a).length,s=l/(c-1);n.currentMin=a[0].height.toString()+"'",n.currentMax=a[c-1].height.toString()+"'",n.currentMinIndex=0,n.currentMaxIndex=c-1}var u,d,g=0;n.startMove=function(o,t){n.currentSlider=o,d=r.find("#slider-"+o),u=parseInt(d.css("left"),10),g=t.pageX,n.lastMaxIndex=angular.copy(n.currentMaxIndex),n.lastMinIndex=angular.copy(n.currentMinIndex),e.on("mousemove",f),e.on("mouseup",p)};var f=function(e){var r,t=e.pageX,c=t-g,f=u+c;if("min"==n.currentSlider){r=f>n.currentMaxPos?n.currentMaxPos:0>f?0:f;var p=Math.round(r/s);"roped"==o.type?newGrade=i[p].grade:"height"==o.type?newGrade=a[p].height.toString()+"'":newGrade=p,n.$apply(n.currentMin=newGrade),n.currentMinIndex=p,n.currentMinPos=r}else{r=f>l?l:f<n.currentMinPos?n.currentMinPos:f;var p=Math.round(r/s);"roped"==o.type?newGrade=i[p].grade:"height"==o.type?newGrade=a[p].height.toString()+"'":newGrade=p,n.$apply(n.currentMax=newGrade),n.currentMaxIndex=p,n.currentMaxPos=r}d.css("left",r)},p=function(r){e.off("mousemove",f),e.off("mouseup",p);var l;return l="min"==n.currentSlider?n.currentMinIndex*s:n.currentMaxIndex*s,d.css("left",l),n.clickedEl=null,n.currentSlider=null,n.currentMaxIndex==n.lastMaxIndex&&n.currentMinIndex==n.lastMinIndex?void console.log("...Slider values remained the same..."):("roped"==o.type?t.filterRopedGrade(i[n.currentMinIndex].conversion,i[n.currentMaxIndex].conversion):"height"==o.type?t.filterHeight(a[n.currentMinIndex].height,a[n.currentMaxIndex].height):t.filterBoulderGrade(n.currentMinIndex,n.currentMaxIndex),void n.$apply())}}}}]),app.directive("jdUploadView",["ClimbData","SpotData","Places",function(e,n,r){return{restrict:"E",templateUrl:"directives/uploadView.html",link:function(o,t,i){e.$loaded(function(e){o.climbData=e,console.log("ClimbData in Upload View"),console.log(o.climbData)}),o.newClimb={},o.newClimb.newOrOld="old",o.newClimb.newLocation={},o.setGradeOptions=function(){"boulder"==o.newClimb.climbType?o.gradeOptions=[{number:0,fullGrade:"V0"},{number:1,fullGrade:"V1"},{number:2,fullGrade:"V2"},{number:3,fullGrade:"V3"},{number:4,fullGrade:"V4"},{number:5,fullGrade:"V5"},{number:6,fullGrade:"V6"},{number:7,fullGrade:"V7"},{number:8,fullGrade:"V8"},{number:9,fullGrade:"V9"},{number:10,fullGrade:"V10"},{number:11,fullGrade:"V11"},{number:12,fullGrade:"V12"},{number:13,fullGrade:"V13"},{number:14,fullGrade:"V14"},{number:15,fullGrade:"V15"},{number:16,fullGrade:"V16"}]:o.gradeOptions=[{number:6,fullGrade:"5.6"},{number:7,fullGrade:"5.7"},{number:8,fullGrade:"5.8"},{number:9,fullGrade:"5.9"},{number:10.1,fullGrade:"5.10a"},{number:10.2,fullGrade:"5.10b"},{number:10.3,fullGrade:"5.10c"},{number:10.4,fullGrade:"5.10d"},{number:11.1,fullGrade:"5.11a"},{number:11.2,fullGrade:"5.11b"},{number:11.3,fullGrade:"5.11c"},{number:11.4,fullGrade:"5.11d"},{number:12.1,fullGrade:"5.12a"},{number:12.2,fullGrade:"5.12b"},{number:12.3,fullGrade:"5.12c"},{number:12.4,fullGrade:"5.12d"},{number:13.1,fullGrade:"5.13a"},{number:13.2,fullGrade:"5.13b"},{number:13.3,fullGrade:"5.13c"},{number:13.4,fullGrade:"5.13d"},{number:14.1,fullGrade:"5.14a"},{number:14.2,fullGrade:"5.14b"},{number:14.3,fullGrade:"5.14c"},{number:14.4,fullGrade:"5.14d"},{number:15.1,fullGrade:"5.15a"},{number:15.2,fullGrade:"5.15b"},{number:15.3,fullGrade:"5.15c"},{number:15.4,fullGrade:"5.15d"}]},o.createNewClimb=function(){console.log("Upload Form:"),console.log(o.uploadForm);var t=function(e,n){if("boulder"==n)return parseInt(e);var r={};if(e.number>9){var o=e.fullGrade.split(".")[1];r={grade:o,conversion:e.number}}else r={grade:gradeInt,conversion:gradeInt};return r},i={description:o.newClimb.climbDescription,grade:t(o.newClimb.climbGrade,o.newClimb.climbType),height:o.newClimb.climbHeight,name:o.newClimb.climbName,rating:parseInt(o.newClimb.climbRating),type:o.newClimb.climbType,subtype:o.newClimb.climbSubType};if(console.log("New Climb Obj:"),console.log(i),"old"==o.newClimb.newOrOld){var a=o.climbData[o.newClimb.climbLocation],l=a.$id;console.log("Target Spot:"),console.log(a),n.get(l).$loaded(function(e){console.log("Climbs within desired spot recieved as FirebaseArray:"),console.log(e),e.$add(i).then(function(e){console.log(i.name+" successfully added to "+a.name)})},function(e){console.error("ERROR: Could not retrieve sibling climbs. "+e)})}else{var s=new google.maps.LatLng(o.newClimb.newLocation.latitude,o.newClimb.newLocation.longitude);r.geocode(s).then(function(r){console.log("New location details recieved: "),console.log(r);var t=function(e){for(var n=0;n<e.length;n++)for(var r=e[n],t=0;t<r.types.length;t++)if(console.log("Type: "+r.types[t]),"postal_code"==r.types[t])return o.newClimb.newLocation.details=r,!0;return console.error('ERROR: Could not find "postal_code" of the new location.'),!1},a=function(e){for(var n=0;n<e.length;n++)for(var r=e[n],t=0;t<r.types.length;t++)if(console.log("Type: "+r.types[t]),"administrative_area_level_1"==r.types[t])return o.newClimb.newLocation.details.state_code=r.short_name,o.newClimb.newLocation.details.state_name=r.long_name,!0;return console.error("ERROR: New Spot does not have a state associated with it."),!1};t(r)&&(a(o.newClimb.newLocation.details.address_components),console.log("New Location details updated. New Climb:"),console.log(o.newClimb));var l={climbs:[],location:{lat:o.newClimb.newLocation.latitude,"long":o.newClimb.newLocation.longitude,state_name:o.newClimb.newLocation.details.state_name,state_code:o.newClimb.newLocation.details.state_code},name:o.newClimb.newLocation.name,details:o.newClimb.newLocation.details};console.log("Structured new climbing spot without climb:"),console.log(l),e.$add(l).then(function(e){console.log(l.name+" added to database. Adding climb to spot...");var r=e.key();n.get(r).$loaded(function(e){e.$add(i).then(function(e){console.log(i.name+" successfully added to "+l.name)},function(e){console.error("ERROR: Error adding "+i.name+" to "+l.name)})},function(e){console.error("ERROR: Error retrieving the new location's climb data: "+e)})},function(e){}),console.log("Updated climbData:"),console.log(o.climbData)},function(e){console.error("Error retrieving new location details before saving the climb to the database: "+e)})}},o.showPreview=!0}}}]),app.factory("Auth",["$firebaseAuth","$firebaseObject","FIREBASE_URL","User",function(e,n,r,o){var t=new Firebase(r),i=e(t),a={register:function(e){return i.$createUser(e).then(function(e){return newUser={},newUser.uid=e.uid,newUser.info={email:e.password.email},newUser.lists={},o.add(newUser)},function(e){console.error("Error registering new user: "+e)})},login:function(e){return i.$authWithPassword(e).then(function(e){return console.log("Logged-in. Fetching profile. First response:"),console.log(e),t=new Firebase(r+"/users/"+e.uid),userObj=n(t),userObj},function(e){console.error("Error retrieving user profile:"+e)})},logout:function(){i.$unauth()},resolveUser:function(){return i.$getCurrentUser()},signedIn:function(){return!!a.user.provider},updatePassword:function(e){return i.$changePassword(e)},updateEmail:function(e){return i.$changeEmail(e)},deleteUser:function(e){return i.$removeUser(e)},user:{}};return i.$onAuth(function(e){e?(console.log("logged in"),angular.copy(e,a.user),o.uid?(console.log("Profile already loaded"),console.log(o.user())):(console.log("-Fetching profile"),console.log(a.user.uid),o.get(a.user.uid).$loaded(function(e){console.log("--Profile retrieved:"),console.log(e)}))):(console.log("logged out"),angular.copy({},a.user))}),a}]),app.factory("ClimbData",["FIREBASE_URL","$firebaseArray",function(e,n){var r=new Firebase(e+"/data"),o=n(r);return o}]),app.factory("Places",["$q",function(e){var n=new google.maps.places.AutocompleteService,r=new google.maps.Geocoder,o={autocomplete:function(r){if(r){var o={input:r,types:"(cities)",componentRestrictions:{country:"us"}};return e(function(e,r){n.getQueryPredictions(o,function(n,o){o!=google.maps.places.PlacesServiceStatus.OK?r("Error retrieving autocomplete: "+o):e(n)})})}return e(function(e,n){n("No input present")})},geocode:function(n){if(""!=n){var o=angular.isString(n)?{address:n}:{latLng:n};return e(function(e,n){r.geocode(o,function(r,o){o!=google.maps.GeocoderStatus.OK?n("Error retrieving place coordinates: "+o):e(r)})})}},currentSearch:!1,userLocation:!1,setUserLocation:function(){return e(function(e,n){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(n){var r=n.coords.latitude,t=n.coords.longitude;o.userLocation=new google.maps.LatLng(r,t),console.log("Can use location:"),console.log(o),e(!0)}):(console.log("User browser does not support geolocation. Please upadate your browser."),n(!1))})}};return o}]),app.factory("SpotData",["FIREBASE_URL","$firebaseArray",function(e,n){var r={get:function(r){var o=new Firebase(e+"/data/"+r+"/climbs"),t=n(o);return t}};return r}]),app.factory("User",["$firebaseObject","FIREBASE_URL",function(e,n){var r,o,t={get:function(t){return r=new Firebase(n+"/users/"+t),o=e(r)},add:function(t){return r=new Firebase(n+"/users"),o=e(r),usersObj[t.uid]=t,usersObj.$save()},save:function(e){return e.$save()},user:function(){return o}};return t}]);